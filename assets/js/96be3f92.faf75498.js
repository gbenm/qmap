"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[501],{3905:(e,a,n)=>{n.d(a,{Zo:()=>s,kt:()=>u});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=t.createContext({}),p=function(e){var a=t.useContext(o),n=a;return e&&(n="function"==typeof e?e(a):c(c({},a),e)),n},s=function(e){var a=p(e.components);return t.createElement(o.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},h=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),h=p(n),u=r,d=h["".concat(o,".").concat(u)]||h[u]||m[u]||i;return n?t.createElement(d,c(c({ref:a},s),{},{components:n})):t.createElement(d,c({ref:a},s))}));function u(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=h;var l={};for(var o in a)hasOwnProperty.call(a,o)&&(l[o]=a[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var p=2;p<i;p++)c[p]=n[p];return t.createElement.apply(null,c)}return t.createElement.apply(null,n)}h.displayName="MDXCreateElement"},178:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var t=n(7462),r=(n(7294),n(3905));const i={sidebar_position:4},c="Compiler Cache",l={unversionedId:"cache",id:"cache",title:"Compiler Cache",description:"Uso",source:"@site/docs/cache.md",sourceDirName:".",slug:"/cache",permalink:"/qmap/docs/cache",draft:!1,editUrl:"https://github.com/gbenm/qmap/tree/main/docs/docs/cache.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"La instancia",permalink:"/qmap/docs/instance"},next:{title:"Queries",permalink:"/qmap/docs/category/queries"}},o={},p=[{value:"Uso",id:"uso",level:2},{value:"Simple",id:"simple",level:3},{value:"Utilizando <code>CachePolicy</code>",id:"utilizando-cachepolicy",level:3},{value:"HashCache example",id:"hashcache-example",level:3},{value:"CacheStore",id:"cachestore",level:2},{value:"Qu\xe9 es?",id:"qu\xe9-es",level:3},{value:"Creaci\xf3n",id:"creaci\xf3n",level:3},{value:"Agregar <code>CachePolicy</code>",id:"agregar-cachepolicy",level:3},{value:"CachePolicy",id:"cachepolicy",level:2},{value:"Qu\xe9 es?",id:"qu\xe9-es-1",level:3},{value:"Creaci\xf3n",id:"creaci\xf3n-1",level:3},{value:"Encadenar pol\xedticas",id:"encadenar-pol\xedticas",level:3},{value:"Encadenar 2 instancias",id:"encadenar-2-instancias",level:4},{value:"Encadenar m\xe1s de 2 instancias",id:"encadenar-m\xe1s-de-2-instancias",level:4},{value:"Usar <code>chain</code>",id:"usar-chain",level:3}],s={toc:p};function m(e){let{components:a,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},s,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"compiler-cache"},"Compiler Cache"),(0,r.kt)("h2",{id:"uso"},"Uso"),(0,r.kt)("h3",{id:"simple"},"Simple"),(0,r.kt)("p",null,"La forma simple para utilizar un cache es tener\nuna instancia de ",(0,r.kt)("inlineCode",{parentName:"p"},"CacheStore"),", esta debe ser capaz\nde funcionar con ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," tanto como clave interna y\nexterna, de otra manera necesitar\xe1 un ",(0,r.kt)("inlineCode",{parentName:"p"},"CachePolicy")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { qmapCreator } from "@qmap/engine"\nimport { InMemoryCache } from "mycachelib" // paquete ficticio\n\nconst qmap = qmapCreator({\n    cache: new InMemoryCache()\n})\n')),(0,r.kt)("p",null,"V\xe9ase ",(0,r.kt)("a",{parentName:"p",href:"#cachestore"},"CacheStore qu\xe9 es?")),(0,r.kt)("h3",{id:"utilizando-cachepolicy"},"Utilizando ",(0,r.kt)("inlineCode",{parentName:"h3"},"CachePolicy")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"V\xe9ase ",(0,r.kt)("a",{parentName:"li",href:"#cachestore"},"CacheStore qu\xe9 es?")),(0,r.kt)("li",{parentName:"ul"},"V\xe9ase ",(0,r.kt)("a",{parentName:"li",href:"#cachepolicy"},"CachePolicy qu\xe9 es?"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { qmapCreator } from "@qmap/engine"\nimport { InMemoryCache, FifoCache, HashCache } from "mycachelib" // paquete ficticio\n\nconst cache = new InMemoryCache()\n    .accept(new HashCache().pipe(new FifoCache(100)))\n\nconst qmap = qmapCreator({\n    cache\n})\n')),(0,r.kt)("p",null,"En este caso la pol\xedtica principal es el ",(0,r.kt)("inlineCode",{parentName:"p"},"HashCache")," y ser\xe1\nel que recibir\xe1 la query pura, luego el ",(0,r.kt)("strong",{parentName:"p"},"hash de la query"),"\nllegar\xe1 al ",(0,r.kt)("inlineCode",{parentName:"p"},"FifoCache")," que tiene el rol de s\xf3lo mantener\n",(0,r.kt)("strong",{parentName:"p"},"100")," queries y utilizar\xe1 ",(0,r.kt)("inlineCode",{parentName:"p"},"FIFO")," como pol\xedtica de reemplazo,\npor \xfaltimo el valor llegar\xe1 al ",(0,r.kt)("inlineCode",{parentName:"p"},"InMemoryCache")," que es el\n",(0,r.kt)("inlineCode",{parentName:"p"},"CacheStore")," y este se encargar\xe1 de tener las queries en\nmemoria."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Implentaci\xf3n de ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/gbenm/qmap/blob/main/src/cache/__testing__/HashCache.ts"},"HashCache")),(0,r.kt)("li",{parentName:"ul"},"Implentaci\xf3n de ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/gbenm/qmap/blob/main/src/cache/__testing__/FIFOCache.ts"},"FifoCache")),(0,r.kt)("li",{parentName:"ul"},"Implentaci\xf3n de ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/gbenm/qmap/blob/main/src/cache/__testing__/InMemoryCache.ts"},"InMemoryCache"))),(0,r.kt)("h3",{id:"hashcache-example"},"HashCache example"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"v\xe9ase ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/gbenm/qmap/blob/main/src/cache/__testing__/HashCache.ts"},"HashCache"))),(0,r.kt)("p",null,"Si por ejemplo se quiere evitar enviar las queries por medio de ",(0,r.kt)("strong",{parentName:"p"},"query strings")," o\nminimizar el tama\xf1o se podr\xeda optar por tener una implementaci\xf3n\nsimilar a lo siguiente (este ejemplo simula un API)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'// paquetes ficticios\nimport { qmap } from "mypackage"\nimport { HashCache } from "mycachelib"\nimport { getProducts } from "myusecaselib"\n\nfunction getHashCache() {\n    const cache = qmap.cache\n\n    if (!cache) {\n        throw new Error("No cache!")\n    }\n\n    return cache.getMainPolicy<HashCache>()\n}\n\napp.get("/query/:hash", (req, res) => {\n    const hashCache = getHashCache()\n\n    res.json({\n        incache: hashCache.hasKey(req.params.hash)\n    })\n}) // preguntar si el hash est\xe1 registrado\n\napp.post("/query", (req, res) => {\n    const hashCache = getHashCache()\n\n    const query = req.body.query\n    const hash = hashCache.computeAndSave(query, { query })\n\n    res.json({\n        hash\n    })\n}) // registrar la query\n\napp.get("/products", (req, res) => {\n    const hash = req.query.hash\n\n    // fallar\xe1 si no tiene el hash en cache\n    const { apply } = qmap(hash, { mode: "only-cache" })\n\n    const products = getProducts()\n\n    res.json(apply(\n        { status: "success", data: { products } },\n        { over: ["data"] }\n    ))\n})\n')),(0,r.kt)("h2",{id:"cachestore"},"CacheStore"),(0,r.kt)("h3",{id:"qu\xe9-es"},"Qu\xe9 es?"),(0,r.kt)("p",null,"Este componente debe encargarse de guardar la informaci\xf3n,\nes recomendable no agregar comportamientos espec\xedficos, ya\nque esto se puede realizar mediante ",(0,r.kt)("inlineCode",{parentName:"p"},"CachePolicy"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Un ejemplo es ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/gbenm/qmap/blob/main/src/cache/__testing__/InMemoryCache.ts"},"InMemoryCache")," que \xfanicamente se encarga\nde tener los valores en memoria.")),(0,r.kt)("h3",{id:"creaci\xf3n"},"Creaci\xf3n"),(0,r.kt)("p",null,"Se debe heredar a ",(0,r.kt)("inlineCode",{parentName:"p"},"CacheStore")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { CacheStore } from "@qmap/engine"\n\nexport default class InMemoryCache extends CacheStore<string> {\n    //...\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Es preferible que el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"li"},"_hasKey")," no de excepciones")),(0,r.kt)("h3",{id:"agregar-cachepolicy"},"Agregar ",(0,r.kt)("inlineCode",{parentName:"h3"},"CachePolicy")),(0,r.kt)("p",null,"Para agregar pol\xedticas al store, se utiliza ",(0,r.kt)("inlineCode",{parentName:"p"},"accept")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const cache = new InMemoryCache().accept(policy)\n")),(0,r.kt)("h2",{id:"cachepolicy"},"CachePolicy"),(0,r.kt)("h3",{id:"qu\xe9-es-1"},"Qu\xe9 es?"),(0,r.kt)("p",null,"Este componente se encarga de gestionar o transformar las\nllaves, ",(0,r.kt)("strong",{parentName:"p"},"no deber\xeda")," guardar los valores explicitamente\nsino dejar que su ",(0,r.kt)("inlineCode",{parentName:"p"},"cache")," maneje este procedimiento. Ejemplos:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/gbenm/qmap/blob/main/src/cache/__testing__/HashCache.ts"},"HashCache")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/gbenm/qmap/blob/main/src/cache/__testing__/FIFOCache.ts"},"FifoCache"))),(0,r.kt)("h3",{id:"creaci\xf3n-1"},"Creaci\xf3n"),(0,r.kt)("p",null,"Se debe heredar a ",(0,r.kt)("inlineCode",{parentName:"p"},"CachePolicy")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { CachePolicy } from "@qmap/engine"\n\nexport default class MyCachePolicy extends CachePolicy<string, number> {\n    //...\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Es preferible que el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"hasKey")," no de excepciones")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"save")," toma un clave externa y la transforma a una clave interna, en ejemplo anterior debe mappear una clave ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," a ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," la que ser\xe1 usada dentro del propio cache"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { CachePolicy } from "@qmap/engine"\n\nexport default class MyCachePolicy extends CachePolicy<string, number> {\n    private keyMap: { [k: number]: unknown } = {}\n\n    save(key: string, data: unknown): number {\n        const innerKey = key.length\n        const nextCacheKey = this.cache.save(innerKey, data)\n        this.keyMap[innerKey] = nextCacheKey\n        return innerKey\n    }\n}\n')),(0,r.kt)("p",{parentName:"li"},"  No es necesario transformar la key, se puede tener un ",(0,r.kt)("inlineCode",{parentName:"p"},"CachePolicy<T, T>")," y\ndevolver la misma clave de tipo ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),", por ejemplo un FIFO, LRU, etc. No\nnecesitan transformar las claves s\xf3lo gestionar el espacio")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"update"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"remove"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"hasKey")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"lookup")," utilizan el innerKey, en este caso ",(0,r.kt)("inlineCode",{parentName:"p"},"number")))),(0,r.kt)("h3",{id:"encadenar-pol\xedticas"},"Encadenar pol\xedticas"),(0,r.kt)("p",null,"Se utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"pipe")," este devuelve la misma instancia, por lo que\nllamar ",(0,r.kt)("inlineCode",{parentName:"p"},"pipe")," varias veces s\xf3lo sutituye el siguiente en la cadena, se debe tener cuidado."),(0,r.kt)("h4",{id:"encadenar-2-instancias"},"Encadenar 2 instancias"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const hashCachePolicy = new HashCache().pipe(new FifoCache(100))\n")),(0,r.kt)("h4",{id:"encadenar-m\xe1s-de-2-instancias"},"Encadenar m\xe1s de 2 instancias"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const hashCachePolicy = hashCache.pipe(fifo.pipe(other))\n")),(0,r.kt)("p",null,"El orden de en que ocurren las llamadas es ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCache ->  fifo -> other -> store")),(0,r.kt)("h3",{id:"usar-chain"},"Usar ",(0,r.kt)("inlineCode",{parentName:"h3"},"chain")),(0,r.kt)("p",null,"Para no utilizar ",(0,r.kt)("inlineCode",{parentName:"p"},"pipe")," directamente se puede utilizar ",(0,r.kt)("inlineCode",{parentName:"p"},"chain")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { chain } from "@qmap/engine"\n\nconst hashCache = chain(new HashCache(), new FifoCache(100), new OtherPolicy())\n')),(0,r.kt)("p",null,"El orden de en que ocurren las llamadas es ",(0,r.kt)("inlineCode",{parentName:"p"},"Hash ->  Fifo -> OtherPolicy -> CacheStore")))}m.isMDXComponent=!0}}]);
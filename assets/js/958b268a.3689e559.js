"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[932],{5194:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var t=a(3117),r=(a(7294),a(3905));const i={sidebar_position:3},o="La instancia",p={unversionedId:"instance",id:"instance",title:"La instancia",description:"Es devuelta por qmapCreator y se encarga de compilar la",source:"@site/docs/instance.md",sourceDirName:".",slug:"/instance",permalink:"/qmap/docs/instance",draft:!1,editUrl:"https://github.com/gbenm/qmap/tree/main/docs/docs/instance.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Creaci\xf3n de instancias QMAP",permalink:"/qmap/docs/create-instance"},next:{title:"Compiler Cache",permalink:"/qmap/docs/cache"}},s={},l=[{value:"Args",id:"args",level:2},{value:"<code>query</code>",id:"query",level:3},{value:"<code>options</code>",id:"options",level:3},{value:"Al ejecutar",id:"al-ejecutar",level:2},{value:"<code>errors</code>",id:"errors",level:3},{value:"<code>includes</code>",id:"includes",level:3},{value:"<code>apply</code>",id:"apply",level:3},{value:"<code>over</code> option",id:"over-option",level:4}],c={toc:l};function d(e){let{components:n,...a}=e;return(0,r.kt)("wrapper",(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"la-instancia"},"La instancia"),(0,r.kt)("p",null,"Es devuelta por ",(0,r.kt)("inlineCode",{parentName:"p"},"qmapCreator")," y se encarga de compilar la\nquery y devolver funciones de ayuda."),(0,r.kt)("h2",{id:"args"},"Args"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"function qmap(query, options) {\n    //\n}\n")),(0,r.kt)("h3",{id:"query"},(0,r.kt)("inlineCode",{parentName:"h3"},"query")),(0,r.kt)("p",null,"Es el string que representa su query, tambi\xe9n es posible pasar\n",(0,r.kt)("inlineCode",{parentName:"p"},"null")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," que representan que no se har\xe1 ninguna\ntransformaci\xf3n (",(0,r.kt)("inlineCode",{parentName:"p"},'""'),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"{}"')," tambi\xe9n representan lo mismo)"),(0,r.kt)("h3",{id:"options"},(0,r.kt)("inlineCode",{parentName:"h3"},"options")),(0,r.kt)("p",null,"Es un objeto opcional que permite definir el ",(0,r.kt)("inlineCode",{parentName:"p"},"schema")," y las ",(0,r.kt)("inlineCode",{parentName:"p"},"variables")," por default\n(ambos pueden ser sobreescritos), ",(0,r.kt)("strong",{parentName:"p"},"schema")," le hace saber a la funci\xf3n cu\xe1l de los\n",(0,r.kt)("a",{parentName:"p",href:"./create-instance#schemas"},"schemas")," debe utilizar para filtrar la informaci\xf3n\ny ",(0,r.kt)("strong",{parentName:"p"},"variables")," sirven para dar valores a las variables en las ",(0,r.kt)("a",{parentName:"p",href:"./queries/functions"},"funciones"),"."),(0,r.kt)("admonition",{title:"Importante",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Si sobreescribe el ",(0,r.kt)("inlineCode",{parentName:"p"},"schema")," en la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"apply")," debe sobreescribirlo en la funci\xf3n\n",(0,r.kt)("inlineCode",{parentName:"p"},"includes"),", ya que sino van a diferir en comportamiento.")),(0,r.kt)("h2",{id:"al-ejecutar"},"Al ejecutar"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const qmap = qmapCreator()\n\nconst { errors, apply, includes } = qmap(`{\n    [ upperCase(products.name) ],\n    transaction.providers.id,\n    take([ currency([ add(ids, @offset) ]) ], @quantity)\n}`, {\n  variables: {\n    quantity: 1,\n    offset: 300,\n  }\n})\n")),(0,r.kt)("p",null,"La ejecuci\xf3n de la funci\xf3n de compilaci\xf3n devuelve\nun objeto que contiene: ",(0,r.kt)("inlineCode",{parentName:"p"},"errors"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"apply")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"includes"),"."),(0,r.kt)("h3",{id:"errors"},(0,r.kt)("inlineCode",{parentName:"h3"},"errors")),(0,r.kt)("p",null,"Es un array con los errores al compilar la query, es ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," si no hay errores."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { qmapCreator } from "@qmap/engine"\nconst qmap = qmapCreator()\nconst { errors } = qmap("{ id, name }")\n')),(0,r.kt)("h3",{id:"includes"},(0,r.kt)("inlineCode",{parentName:"h3"},"includes")),(0,r.kt)("p",null,"Es una funci\xf3n que permite comprobar si el ",(0,r.kt)("inlineCode",{parentName:"p"},"path"),"\n(d\xf3nde est\xe1 alojado un objeto dentro del JSON)\nse debe agregar. Respeta a los ",(0,r.kt)("inlineCode",{parentName:"p"},"schemas")," y a las\n",(0,r.kt)("inlineCode",{parentName:"p"},"queries")," de ",(0,r.kt)("inlineCode",{parentName:"p"},"qmapCreator"),", por lo que no importa si\nest\xe1 en la query que se compil\xf3 con la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"qmap"),",\nsi el schema o la query no lo tienen,\nel resultado ser\xe1 ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),". Existe un segundo\npar\xe1metro (opcional) que sirve para sobreescribir\nel schema, si en ",(0,r.kt)("inlineCode",{parentName:"p"},"apply")," declara nuevamente el\n",(0,r.kt)("inlineCode",{parentName:"p"},"schema")," asegurese de sobreescribirlo tambi\xe9n en\n",(0,r.kt)("inlineCode",{parentName:"p"},"includes"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { qmapCreator } from "@qmap/engine"\nconst qmap = qmapCreator()\n\nconst { includes } = qmap(`{\n    product {\n        provider {\n            account\n        }\n    }\n}`)\n\n// se necesita un array que representa el camino hacia lo\n// que se pregunta\nincludes(["product"]) // true\nincludes(["product", "provider"]) // true\nincludes(["product", "provider", "account"]) // true\nincludes(["product", "provider", "id"]) // false\n')),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"includes")," utiliza un \xedndice que se genera en compilaci\xf3n,\nsi se tiene ",(0,r.kt)("inlineCode",{parentName:"p"},"schemas")," o ",(0,r.kt)("inlineCode",{parentName:"p"},"queries")," se realiza la b\xfasqueda\nprimero en el indice de ",(0,r.kt)("inlineCode",{parentName:"p"},"schemas"),", luego en el de ",(0,r.kt)("inlineCode",{parentName:"p"},"queries"),"\ny por \xfaltimo sobre la query actual.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"La intenci\xf3n de esta funci\xf3n es que se puedan realizar\noperaciones de forma condicional, por ejemplo agregar\nun join si es necesario (ayuda a cambiar el enfoque\nen el caso de tener diferentes niveles de acceso a la informaci\xf3n).")),(0,r.kt)("h3",{id:"apply"},(0,r.kt)("inlineCode",{parentName:"h3"},"apply")),(0,r.kt)("p",null,"Es la funci\xf3n que trasforma el JSON, recibe como\nprimer argumento el JSON objetivo, y como segundo (opcional)\nlas opciones, que es el objeto d\xf3nde se pueden agregar las\nvariables, sobreescribir el ",(0,r.kt)("inlineCode",{parentName:"p"},"schema")," (cuidado con\nsobreescribir el schema, aseg\xfarese de hacerlo en ambos, ",(0,r.kt)("inlineCode",{parentName:"p"},"apply")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"includes"),")\ne indicar en d\xf3nde se debe aplicar las transformaciones."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Las variables pueden tener cualquier tipo de dato.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { qmapCreator } from "@qmap/engine"\n\nconst qmap = qmapCreator({\n  functions: {\n    concat: (...strs) => strs.join("")\n  },\n  schemas: `{\n    user {\n      name\n    }\n  }`\n})\n\nconst { apply } = qmap(`{\n  id,\n  name,\n  label: concat(id, @separator, name)\n}`, {\n  variables: {\n    separator: "@"\n  }\n})\n\nconst input = {\n    id: 1,\n    name: "test",\n    other: "other"\n}\n\nconst result = apply(input)\n// result is { id: 1, name: \'test\', label: \'1@test\' }\n\nconst otherResult = apply(input, {\n  schema: "user",\n  variables: {\n    separator: "-"\n  }\n})\n// result is { id: null, name: \'test\', label: \'-test\' }\n')),(0,r.kt)("h4",{id:"over-option"},(0,r.kt)("inlineCode",{parentName:"h4"},"over")," option"),(0,r.kt)("p",null,"Es un arreglo de strings que indican el path para\nllegar al lugar d\xf3nde se deben aplicar las transformaciones,\npor ejemplo ",(0,r.kt)("inlineCode",{parentName:"p"},'["request", "data"]')," se aplica a ",(0,r.kt)("inlineCode",{parentName:"p"},"input.request.data")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { qmapCreator } from "@qmap/engine"\n\nconst qmap = qmapCreator()\n\nconst { apply } = qmap(`{\n  id,\n  name,\n}`)\n\nconst input = {\n  status: "success",\n  data: {\n    id: 1,\n    name: "test",\n    other: "other"\n  }\n}\n\nconst result = apply(input, { over: ["data"] })\n// result is { data: { id: 1, name: \'test\' } }\n\n')))}d.isMDXComponent=!0},3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>m});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function p(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),l=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},c=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(a),m=r,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return a?t.createElement(k,o(o({ref:n},c),{},{components:a})):t.createElement(k,o({ref:n},c))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var l=2;l<i;l++)o[l]=a[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);
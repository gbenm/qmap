// Generated from /home/gbenm/code/pumkat/qmap/antlr4/qMap.g4 by ANTLR 4.9.3
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u000fz\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004",
    "\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0005\u0005\u00052\n\u0005",
    "\u0003\u0005\u0005\u00055\n\u0005\u0003\u0005\u0005\u00058\n\u0005\u0003",
    "\u0006\u0003\u0006\u0003\u0006\u0005\u0006=\n\u0006\u0003\u0006\u0005",
    "\u0006@\n\u0006\u0003\u0006\u0005\u0006C\n\u0006\u0003\u0007\u0003\u0007",
    "\u0003\b\u0003\b\u0003\t\u0003\t\u0003\n\u0003\n\u0003\u000b\u0003\u000b",
    "\u0003\f\u0003\f\u0003\f\u0003\f\u0003\r\u0003\r\u0003\u000e\u0003\u000e",
    "\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0011\u0003\u0011",
    "\u0007\u0011]\n\u0011\f\u0011\u000e\u0011`\u000b\u0011\u0003\u0011\u0003",
    "\u0011\u0003\u0011\u0003\u0011\u0007\u0011f\n\u0011\f\u0011\u000e\u0011",
    "i\u000b\u0011\u0003\u0011\u0003\u0011\u0005\u0011m\n\u0011\u0003\u0012",
    "\u0006\u0012p\n\u0012\r\u0012\u000e\u0012q\u0003\u0013\u0006\u0013u",
    "\n\u0013\r\u0013\u000e\u0013v\u0003\u0013\u0003\u0013\u0004^g\u0002",
    "\u0014\u0003\u0002\u0005\u0002\u0007\u0002\t\u0002\u000b\u0002\r\u0003",
    "\u000f\u0004\u0011\u0005\u0013\u0006\u0015\u0007\u0017\b\u0019\t\u001b",
    "\n\u001d\u000b\u001f\f!\r#\u000e%\u000f\u0003\u0002\u0007\f\u0002$$",
    "))AA^^cdhhppttvvxx\u0003\u0002$$\u0003\u0002))\u0007\u0002&&2;C\\aa",
    "c|\u0005\u0002\u000b\f\u000f\u000f\"\"\u0002\u0081\u0002\r\u0003\u0002",
    "\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002",
    "\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002",
    "\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002",
    "\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002",
    "\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!\u0003\u0002",
    "\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002\u0002",
    "\u0002\u0003\'\u0003\u0002\u0002\u0002\u0005)\u0003\u0002\u0002\u0002",
    "\u0007+\u0003\u0002\u0002\u0002\t7\u0003\u0002\u0002\u0002\u000bB\u0003",
    "\u0002\u0002\u0002\rD\u0003\u0002\u0002\u0002\u000fF\u0003\u0002\u0002",
    "\u0002\u0011H\u0003\u0002\u0002\u0002\u0013J\u0003\u0002\u0002\u0002",
    "\u0015L\u0003\u0002\u0002\u0002\u0017N\u0003\u0002\u0002\u0002\u0019",
    "R\u0003\u0002\u0002\u0002\u001bT\u0003\u0002\u0002\u0002\u001dV\u0003",
    "\u0002\u0002\u0002\u001fX\u0003\u0002\u0002\u0002!l\u0003\u0002\u0002",
    "\u0002#o\u0003\u0002\u0002\u0002%t\u0003\u0002\u0002\u0002\'(\u0007",
    "$\u0002\u0002(\u0004\u0003\u0002\u0002\u0002)*\u0007)\u0002\u0002*\u0006",
    "\u0003\u0002\u0002\u0002+,\u0007^\u0002\u0002,-\t\u0002\u0002\u0002",
    "-\b\u0003\u0002\u0002\u0002.8\n\u0003\u0002\u0002/8\u0005\u0007\u0004",
    "\u000202\u0007^\u0002\u000210\u0003\u0002\u0002\u000212\u0003\u0002",
    "\u0002\u000224\u0003\u0002\u0002\u000235\u0007\u000f\u0002\u000243\u0003",
    "\u0002\u0002\u000245\u0003\u0002\u0002\u000256\u0003\u0002\u0002\u0002",
    "68\u0007\f\u0002\u00027.\u0003\u0002\u0002\u00027/\u0003\u0002\u0002",
    "\u000271\u0003\u0002\u0002\u00028\n\u0003\u0002\u0002\u00029C\n\u0004",
    "\u0002\u0002:C\u0005\u0007\u0004\u0002;=\u0007^\u0002\u0002<;\u0003",
    "\u0002\u0002\u0002<=\u0003\u0002\u0002\u0002=?\u0003\u0002\u0002\u0002",
    ">@\u0007\u000f\u0002\u0002?>\u0003\u0002\u0002\u0002?@\u0003\u0002\u0002",
    "\u0002@A\u0003\u0002\u0002\u0002AC\u0007\f\u0002\u0002B9\u0003\u0002",
    "\u0002\u0002B:\u0003\u0002\u0002\u0002B<\u0003\u0002\u0002\u0002C\f",
    "\u0003\u0002\u0002\u0002DE\u0007}\u0002\u0002E\u000e\u0003\u0002\u0002",
    "\u0002FG\u0007\u007f\u0002\u0002G\u0010\u0003\u0002\u0002\u0002HI\u0007",
    "#\u0002\u0002I\u0012\u0003\u0002\u0002\u0002JK\u0007<\u0002\u0002K\u0014",
    "\u0003\u0002\u0002\u0002LM\u0007.\u0002\u0002M\u0016\u0003\u0002\u0002",
    "\u0002NO\u00070\u0002\u0002OP\u00070\u0002\u0002PQ\u00070\u0002\u0002",
    "Q\u0018\u0003\u0002\u0002\u0002RS\u00070\u0002\u0002S\u001a\u0003\u0002",
    "\u0002\u0002TU\u0007*\u0002\u0002U\u001c\u0003\u0002\u0002\u0002VW\u0007",
    "+\u0002\u0002W\u001e\u0003\u0002\u0002\u0002XY\u0007(\u0002\u0002Y ",
    "\u0003\u0002\u0002\u0002Z^\u0005\u0005\u0003\u0002[]\u0005\u000b\u0006",
    "\u0002\\[\u0003\u0002\u0002\u0002]`\u0003\u0002\u0002\u0002^_\u0003",
    "\u0002\u0002\u0002^\\\u0003\u0002\u0002\u0002_a\u0003\u0002\u0002\u0002",
    "`^\u0003\u0002\u0002\u0002ab\u0005\u0005\u0003\u0002bm\u0003\u0002\u0002",
    "\u0002cg\u0005\u0003\u0002\u0002df\u0005\t\u0005\u0002ed\u0003\u0002",
    "\u0002\u0002fi\u0003\u0002\u0002\u0002gh\u0003\u0002\u0002\u0002ge\u0003",
    "\u0002\u0002\u0002hj\u0003\u0002\u0002\u0002ig\u0003\u0002\u0002\u0002",
    "jk\u0005\u0003\u0002\u0002km\u0003\u0002\u0002\u0002lZ\u0003\u0002\u0002",
    "\u0002lc\u0003\u0002\u0002\u0002m\"\u0003\u0002\u0002\u0002np\t\u0005",
    "\u0002\u0002on\u0003\u0002\u0002\u0002pq\u0003\u0002\u0002\u0002qo\u0003",
    "\u0002\u0002\u0002qr\u0003\u0002\u0002\u0002r$\u0003\u0002\u0002\u0002",
    "su\t\u0006\u0002\u0002ts\u0003\u0002\u0002\u0002uv\u0003\u0002\u0002",
    "\u0002vt\u0003\u0002\u0002\u0002vw\u0003\u0002\u0002\u0002wx\u0003\u0002",
    "\u0002\u0002xy\b\u0013\u0002\u0002y&\u0003\u0002\u0002\u0002\u000e\u0002",
    "147<?B^glqv\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class qMapLexer extends antlr4.Lexer {

    static grammarFileName = "qMap.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'{'", "'}'", "'!'", "':'", "','", "'...'", 
                         "'.'", "'('", "')'", "'&'" ];
	static symbolicNames = [ null, "LEFT_BRACKET", "RIGHT_BRACKET", "EX_MARK", 
                          "COLON", "COMMA", "TRIPLE_DOT", "DOT", "LEFT_PAREN", 
                          "RIHT_PAREN", "AMPERSAND", "STRING", "ID", "WS" ];
	static ruleNames = [ "DOUBLE_QUOTE", "SINGLE_QUOTE", "ESCAPE", "DLOUBE_QUOTE_STR_CHAR", 
                      "SINGLE_QUOTE_STR_CHAR", "LEFT_BRACKET", "RIGHT_BRACKET", 
                      "EX_MARK", "COLON", "COMMA", "TRIPLE_DOT", "DOT", 
                      "LEFT_PAREN", "RIHT_PAREN", "AMPERSAND", "STRING", 
                      "ID", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

qMapLexer.EOF = antlr4.Token.EOF;
qMapLexer.LEFT_BRACKET = 1;
qMapLexer.RIGHT_BRACKET = 2;
qMapLexer.EX_MARK = 3;
qMapLexer.COLON = 4;
qMapLexer.COMMA = 5;
qMapLexer.TRIPLE_DOT = 6;
qMapLexer.DOT = 7;
qMapLexer.LEFT_PAREN = 8;
qMapLexer.RIHT_PAREN = 9;
qMapLexer.AMPERSAND = 10;
qMapLexer.STRING = 11;
qMapLexer.ID = 12;
qMapLexer.WS = 13;




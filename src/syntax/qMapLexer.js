// Generated from /home/gbenm/code/pumkat/qmap/antlr4/qMap.g4 by ANTLR 4.9.3
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u0012\u0086\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0003\u0002",
    "\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0004",
    "\u0003\u0005\u0003\u0005\u0003\u0005\u0005\u00058\n\u0005\u0003\u0005",
    "\u0005\u0005;\n\u0005\u0003\u0005\u0005\u0005>\n\u0005\u0003\u0006\u0003",
    "\u0006\u0003\u0006\u0005\u0006C\n\u0006\u0003\u0006\u0005\u0006F\n\u0006",
    "\u0003\u0006\u0005\u0006I\n\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003",
    "\b\u0003\t\u0003\t\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\f\u0003",
    "\f\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0003\u000f\u0003\u000f\u0003",
    "\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0011\u0003\u0011\u0003",
    "\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0014\u0003\u0014\u0007",
    "\u0014i\n\u0014\f\u0014\u000e\u0014l\u000b\u0014\u0003\u0014\u0003\u0014",
    "\u0003\u0014\u0003\u0014\u0007\u0014r\n\u0014\f\u0014\u000e\u0014u\u000b",
    "\u0014\u0003\u0014\u0003\u0014\u0005\u0014y\n\u0014\u0003\u0015\u0006",
    "\u0015|\n\u0015\r\u0015\u000e\u0015}\u0003\u0016\u0006\u0016\u0081\n",
    "\u0016\r\u0016\u000e\u0016\u0082\u0003\u0016\u0003\u0016\u0004js\u0002",
    "\u0017\u0003\u0002\u0005\u0002\u0007\u0002\t\u0002\u000b\u0002\r\u0003",
    "\u000f\u0004\u0011\u0005\u0013\u0006\u0015\u0007\u0017\b\u0019\t\u001b",
    "\n\u001d\u000b\u001f\f!\r#\u000e%\u000f\'\u0010)\u0011+\u0012\u0003",
    "\u0002\u0007\f\u0002$$))AA^^cdhhppttvvxx\u0003\u0002$$\u0003\u0002)",
    ")\u0007\u0002&&2;C\\aac|\u0005\u0002\u000b\f\u000f\u000f\"\"\u0002\u008d",
    "\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002",
    "\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002",
    "\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002",
    "\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002",
    "\u0002\u001d\u0003\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002",
    "\u0002!\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002",
    "%\u0003\u0002\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002)\u0003",
    "\u0002\u0002\u0002\u0002+\u0003\u0002\u0002\u0002\u0003-\u0003\u0002",
    "\u0002\u0002\u0005/\u0003\u0002\u0002\u0002\u00071\u0003\u0002\u0002",
    "\u0002\t=\u0003\u0002\u0002\u0002\u000bH\u0003\u0002\u0002\u0002\rJ",
    "\u0003\u0002\u0002\u0002\u000fL\u0003\u0002\u0002\u0002\u0011N\u0003",
    "\u0002\u0002\u0002\u0013P\u0003\u0002\u0002\u0002\u0015R\u0003\u0002",
    "\u0002\u0002\u0017T\u0003\u0002\u0002\u0002\u0019V\u0003\u0002\u0002",
    "\u0002\u001bX\u0003\u0002\u0002\u0002\u001dZ\u0003\u0002\u0002\u0002",
    "\u001f^\u0003\u0002\u0002\u0002!`\u0003\u0002\u0002\u0002#b\u0003\u0002",
    "\u0002\u0002%d\u0003\u0002\u0002\u0002\'x\u0003\u0002\u0002\u0002){",
    "\u0003\u0002\u0002\u0002+\u0080\u0003\u0002\u0002\u0002-.\u0007$\u0002",
    "\u0002.\u0004\u0003\u0002\u0002\u0002/0\u0007)\u0002\u00020\u0006\u0003",
    "\u0002\u0002\u000212\u0007^\u0002\u000223\t\u0002\u0002\u00023\b\u0003",
    "\u0002\u0002\u00024>\n\u0003\u0002\u00025>\u0005\u0007\u0004\u00026",
    "8\u0007^\u0002\u000276\u0003\u0002\u0002\u000278\u0003\u0002\u0002\u0002",
    "8:\u0003\u0002\u0002\u00029;\u0007\u000f\u0002\u0002:9\u0003\u0002\u0002",
    "\u0002:;\u0003\u0002\u0002\u0002;<\u0003\u0002\u0002\u0002<>\u0007\f",
    "\u0002\u0002=4\u0003\u0002\u0002\u0002=5\u0003\u0002\u0002\u0002=7\u0003",
    "\u0002\u0002\u0002>\n\u0003\u0002\u0002\u0002?I\n\u0004\u0002\u0002",
    "@I\u0005\u0007\u0004\u0002AC\u0007^\u0002\u0002BA\u0003\u0002\u0002",
    "\u0002BC\u0003\u0002\u0002\u0002CE\u0003\u0002\u0002\u0002DF\u0007\u000f",
    "\u0002\u0002ED\u0003\u0002\u0002\u0002EF\u0003\u0002\u0002\u0002FG\u0003",
    "\u0002\u0002\u0002GI\u0007\f\u0002\u0002H?\u0003\u0002\u0002\u0002H",
    "@\u0003\u0002\u0002\u0002HB\u0003\u0002\u0002\u0002I\f\u0003\u0002\u0002",
    "\u0002JK\u0007B\u0002\u0002K\u000e\u0003\u0002\u0002\u0002LM\u0007]",
    "\u0002\u0002M\u0010\u0003\u0002\u0002\u0002NO\u0007_\u0002\u0002O\u0012",
    "\u0003\u0002\u0002\u0002PQ\u0007}\u0002\u0002Q\u0014\u0003\u0002\u0002",
    "\u0002RS\u0007\u007f\u0002\u0002S\u0016\u0003\u0002\u0002\u0002TU\u0007",
    "#\u0002\u0002U\u0018\u0003\u0002\u0002\u0002VW\u0007<\u0002\u0002W\u001a",
    "\u0003\u0002\u0002\u0002XY\u0007.\u0002\u0002Y\u001c\u0003\u0002\u0002",
    "\u0002Z[\u00070\u0002\u0002[\\\u00070\u0002\u0002\\]\u00070\u0002\u0002",
    "]\u001e\u0003\u0002\u0002\u0002^_\u00070\u0002\u0002_ \u0003\u0002\u0002",
    "\u0002`a\u0007*\u0002\u0002a\"\u0003\u0002\u0002\u0002bc\u0007+\u0002",
    "\u0002c$\u0003\u0002\u0002\u0002de\u0007(\u0002\u0002e&\u0003\u0002",
    "\u0002\u0002fj\u0005\u0005\u0003\u0002gi\u0005\u000b\u0006\u0002hg\u0003",
    "\u0002\u0002\u0002il\u0003\u0002\u0002\u0002jk\u0003\u0002\u0002\u0002",
    "jh\u0003\u0002\u0002\u0002km\u0003\u0002\u0002\u0002lj\u0003\u0002\u0002",
    "\u0002mn\u0005\u0005\u0003\u0002ny\u0003\u0002\u0002\u0002os\u0005\u0003",
    "\u0002\u0002pr\u0005\t\u0005\u0002qp\u0003\u0002\u0002\u0002ru\u0003",
    "\u0002\u0002\u0002st\u0003\u0002\u0002\u0002sq\u0003\u0002\u0002\u0002",
    "tv\u0003\u0002\u0002\u0002us\u0003\u0002\u0002\u0002vw\u0005\u0003\u0002",
    "\u0002wy\u0003\u0002\u0002\u0002xf\u0003\u0002\u0002\u0002xo\u0003\u0002",
    "\u0002\u0002y(\u0003\u0002\u0002\u0002z|\t\u0005\u0002\u0002{z\u0003",
    "\u0002\u0002\u0002|}\u0003\u0002\u0002\u0002}{\u0003\u0002\u0002\u0002",
    "}~\u0003\u0002\u0002\u0002~*\u0003\u0002\u0002\u0002\u007f\u0081\t\u0006",
    "\u0002\u0002\u0080\u007f\u0003\u0002\u0002\u0002\u0081\u0082\u0003\u0002",
    "\u0002\u0002\u0082\u0080\u0003\u0002\u0002\u0002\u0082\u0083\u0003\u0002",
    "\u0002\u0002\u0083\u0084\u0003\u0002\u0002\u0002\u0084\u0085\b\u0016",
    "\u0002\u0002\u0085,\u0003\u0002\u0002\u0002\u000e\u00027:=BEHjsx}\u0082",
    "\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class qMapLexer extends antlr4.Lexer {

    static grammarFileName = "qMap.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'@'", "'['", "']'", "'{'", "'}'", "'!'", 
                         "':'", "','", "'...'", "'.'", "'('", "')'", "'&'" ];
	static symbolicNames = [ null, "AT", "LEFT_BRACKET", "RIGHT_BRACKET", "LEFT_BRACE", 
                          "RIGHT_BRACE", "EX_MARK", "COLON", "COMMA", "TRIPLE_DOT", 
                          "DOT", "LEFT_PAREN", "RIGHT_PAREN", "AMPERSAND", 
                          "STRING", "ID", "WS" ];
	static ruleNames = [ "DOUBLE_QUOTE", "SINGLE_QUOTE", "ESCAPE", "DLOUBE_QUOTE_STR_CHAR", 
                      "SINGLE_QUOTE_STR_CHAR", "AT", "LEFT_BRACKET", "RIGHT_BRACKET", 
                      "LEFT_BRACE", "RIGHT_BRACE", "EX_MARK", "COLON", "COMMA", 
                      "TRIPLE_DOT", "DOT", "LEFT_PAREN", "RIGHT_PAREN", 
                      "AMPERSAND", "STRING", "ID", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

qMapLexer.EOF = antlr4.Token.EOF;
qMapLexer.AT = 1;
qMapLexer.LEFT_BRACKET = 2;
qMapLexer.RIGHT_BRACKET = 3;
qMapLexer.LEFT_BRACE = 4;
qMapLexer.RIGHT_BRACE = 5;
qMapLexer.EX_MARK = 6;
qMapLexer.COLON = 7;
qMapLexer.COMMA = 8;
qMapLexer.TRIPLE_DOT = 9;
qMapLexer.DOT = 10;
qMapLexer.LEFT_PAREN = 11;
qMapLexer.RIGHT_PAREN = 12;
qMapLexer.AMPERSAND = 13;
qMapLexer.STRING = 14;
qMapLexer.ID = 15;
qMapLexer.WS = 16;




// Generated from /home/gbenm/code/pumkat/qMap/antlr4/qMap.g4 by ANTLR 4.10
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,12,117,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,
3,1,3,1,3,3,3,46,8,3,1,3,3,3,49,8,3,1,3,3,3,52,8,3,1,4,1,4,1,4,3,4,57,8,
4,1,4,3,4,60,8,4,1,4,3,4,63,8,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,
1,10,1,10,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,5,14,87,8,14,
10,14,12,14,90,9,14,1,14,1,14,1,14,1,14,5,14,96,8,14,10,14,12,14,99,9,14,
1,14,1,14,3,14,103,8,14,1,15,4,15,106,8,15,11,15,12,15,107,1,15,3,15,111,
8,15,1,16,4,16,114,8,16,11,16,12,16,115,0,0,17,1,0,3,0,5,0,7,0,9,0,11,1,
13,2,15,3,17,4,19,5,21,6,23,7,25,8,27,9,29,10,31,11,33,12,1,0,5,10,0,34,
34,39,39,63,63,92,92,97,98,102,102,110,110,114,114,116,116,118,118,1,0,34,
34,1,0,39,39,5,0,36,36,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,125,
0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,
33,1,0,0,0,1,35,1,0,0,0,3,37,1,0,0,0,5,39,1,0,0,0,7,51,1,0,0,0,9,62,1,0,
0,0,11,64,1,0,0,0,13,66,1,0,0,0,15,68,1,0,0,0,17,70,1,0,0,0,19,72,1,0,0,
0,21,74,1,0,0,0,23,78,1,0,0,0,25,80,1,0,0,0,27,82,1,0,0,0,29,102,1,0,0,0,
31,110,1,0,0,0,33,113,1,0,0,0,35,36,5,34,0,0,36,2,1,0,0,0,37,38,5,39,0,0,
38,4,1,0,0,0,39,40,5,92,0,0,40,41,7,0,0,0,41,6,1,0,0,0,42,52,8,1,0,0,43,
52,3,5,2,0,44,46,5,92,0,0,45,44,1,0,0,0,45,46,1,0,0,0,46,48,1,0,0,0,47,49,
5,13,0,0,48,47,1,0,0,0,48,49,1,0,0,0,49,50,1,0,0,0,50,52,5,10,0,0,51,42,
1,0,0,0,51,43,1,0,0,0,51,45,1,0,0,0,52,8,1,0,0,0,53,63,8,2,0,0,54,63,3,5,
2,0,55,57,5,92,0,0,56,55,1,0,0,0,56,57,1,0,0,0,57,59,1,0,0,0,58,60,5,13,
0,0,59,58,1,0,0,0,59,60,1,0,0,0,60,61,1,0,0,0,61,63,5,10,0,0,62,53,1,0,0,
0,62,54,1,0,0,0,62,56,1,0,0,0,63,10,1,0,0,0,64,65,5,123,0,0,65,12,1,0,0,
0,66,67,5,125,0,0,67,14,1,0,0,0,68,69,5,33,0,0,69,16,1,0,0,0,70,71,5,58,
0,0,71,18,1,0,0,0,72,73,5,44,0,0,73,20,1,0,0,0,74,75,5,46,0,0,75,76,5,46,
0,0,76,77,5,46,0,0,77,22,1,0,0,0,78,79,5,46,0,0,79,24,1,0,0,0,80,81,5,40,
0,0,81,26,1,0,0,0,82,83,5,41,0,0,83,28,1,0,0,0,84,88,3,3,1,0,85,87,3,9,4,
0,86,85,1,0,0,0,87,90,1,0,0,0,88,86,1,0,0,0,88,89,1,0,0,0,89,91,1,0,0,0,
90,88,1,0,0,0,91,92,3,3,1,0,92,103,1,0,0,0,93,97,3,1,0,0,94,96,3,7,3,0,95,
94,1,0,0,0,96,99,1,0,0,0,97,95,1,0,0,0,97,98,1,0,0,0,98,100,1,0,0,0,99,97,
1,0,0,0,100,101,3,1,0,0,101,103,1,0,0,0,102,84,1,0,0,0,102,93,1,0,0,0,103,
30,1,0,0,0,104,106,7,3,0,0,105,104,1,0,0,0,106,107,1,0,0,0,107,105,1,0,0,
0,107,108,1,0,0,0,108,111,1,0,0,0,109,111,3,29,14,0,110,105,1,0,0,0,110,
109,1,0,0,0,111,32,1,0,0,0,112,114,7,4,0,0,113,112,1,0,0,0,114,115,1,0,0,
0,115,113,1,0,0,0,115,116,1,0,0,0,116,34,1,0,0,0,13,0,45,48,51,56,59,62,
88,97,102,107,110,115,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class qMapLexer extends antlr4.Lexer {

    static grammarFileName = "qMap.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'{'", "'}'", "'!'", "':'", "','", "'...'", 
                         "'.'", "'('", "')'" ];
	static symbolicNames = [ null, "LEFT_BRACKET", "RIGHT_BRACKET", "EX_MARK", 
                          "COLON", "COMMA", "TRIPLE_DOT", "DOT", "LEFT_PAREN", 
                          "RIHT_PAREN", "STRING", "ID", "WS" ];
	static ruleNames = [ "DOUBLE_QUOTE", "SINGLE_QUOTE", "ESCAPE", "DLOUBE_QUOTE_STR_CHAR", 
                      "SIGLE_QUOTE_STR_CHAR", "LEFT_BRACKET", "RIGHT_BRACKET", 
                      "EX_MARK", "COLON", "COMMA", "TRIPLE_DOT", "DOT", 
                      "LEFT_PAREN", "RIHT_PAREN", "STRING", "ID", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

qMapLexer.EOF = antlr4.Token.EOF;
qMapLexer.LEFT_BRACKET = 1;
qMapLexer.RIGHT_BRACKET = 2;
qMapLexer.EX_MARK = 3;
qMapLexer.COLON = 4;
qMapLexer.COMMA = 5;
qMapLexer.TRIPLE_DOT = 6;
qMapLexer.DOT = 7;
qMapLexer.LEFT_PAREN = 8;
qMapLexer.RIHT_PAREN = 9;
qMapLexer.STRING = 10;
qMapLexer.ID = 11;
qMapLexer.WS = 12;



